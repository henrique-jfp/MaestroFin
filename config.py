# Arquivo: config.py

import os
import logging

# Configurar logging b√°sico
logging.basicConfig(level=logging.INFO)

# --- CARREGAMENTO DO .ENV APENAS EM DESENVOLVIMENTO ---

# Verificar se estamos em ambiente de produ√ß√£o (Railway)
is_production = bool(os.getenv('RAILWAY_ENVIRONMENT') or os.getenv('PORT'))

if not is_production:
    # Apenas em desenvolvimento, tenta carregar .env
    try:
        from dotenv import load_dotenv
        
        # Pega o caminho absoluto para o diret√≥rio onde este arquivo est√°
        basedir = os.path.abspath(os.path.dirname(__file__))
        dotenv_path = os.path.join(basedir, '.env')
        
        # Verifica se o arquivo .env existe
        if os.path.exists(dotenv_path):
            logging.info(f"üîß [DEV] Carregando vari√°veis de ambiente de: {dotenv_path}")
            load_dotenv(dotenv_path=dotenv_path)
        else:
            logging.info("üîß [DEV] Arquivo .env n√£o encontrado, usando vari√°veis de ambiente do sistema")
    except ImportError:
        logging.info("üîß [DEV] python-dotenv n√£o instalado, usando vari√°veis de ambiente do sistema")
else:
    logging.info("üåê [PROD] Ambiente de produ√ß√£o detectado - usando vari√°veis de ambiente do sistema")


# --- CARREGAMENTO DAS VARI√ÅVEIS DE AMBIENTE ---

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
GEMINI_MODEL_NAME = os.getenv("GEMINI_MODEL_NAME", "gemini-1.5-flash")
GOOGLE_API_KEY = os.getenv("GOOGLE_API_KEY")
GOOGLE_CSE_ID = os.getenv("GOOGLE_CSE_ID")
DATABASE_URL = os.getenv("DATABASE_URL")
GOOGLE_APPLICATION_CREDENTIALS = os.getenv("GOOGLE_APPLICATION_CREDENTIALS")

# ----- ADICIONANDO VARI√ÅVEL DE CHAVE PIX E CONTATO -----
SENDER_EMAIL = os.getenv("SENDER_EMAIL")
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
EMAIL_RECEIVER = os.getenv("EMAIL_RECEIVER")
PIX_KEY = os.getenv("PIX_KEY")


# --- VALIDA√á√ÉO E CONFIGURA√á√ÉO ADICIONAL ---

# Verificar apenas vari√°veis cr√≠ticas para o bot funcionar
if not TELEGRAM_TOKEN:
    logging.error("‚ùå TELEGRAM_TOKEN n√£o configurado!")
    raise ValueError("TELEGRAM_TOKEN √© obrigat√≥rio para o bot funcionar")

# Log das configura√ß√µes (sem expor tokens)
logging.info("‚úÖ Configura√ß√µes carregadas:")
logging.info(f"   üì± TELEGRAM_TOKEN: {'‚úÖ Configurado' if TELEGRAM_TOKEN else '‚ùå N√£o encontrado'}")
logging.info(f"   ü§ñ GEMINI_API_KEY: {'‚úÖ Configurado' if GEMINI_API_KEY else '‚ö†Ô∏è N√£o encontrado'}")
logging.info(f"   üóÑÔ∏è DATABASE_URL: {'‚úÖ Configurado' if DATABASE_URL else '‚ö†Ô∏è N√£o encontrado'}")

# Log das configura√ß√µes de email e PIX (para debug)
logging.info(f"   üìß EMAIL_HOST_USER: {'‚úÖ Configurado' if EMAIL_HOST_USER else '‚ùå N√£o encontrado'}")
logging.info(f"   üìß EMAIL_HOST_PASSWORD: {'‚úÖ Configurado' if EMAIL_HOST_PASSWORD else '‚ùå N√£o encontrado'}")
logging.info(f"   üìß SENDER_EMAIL: {'‚úÖ Configurado' if SENDER_EMAIL else '‚ùå N√£o encontrado'}")
logging.info(f"   üìß EMAIL_RECEIVER: {'‚úÖ Configurado' if EMAIL_RECEIVER else '‚ùå N√£o encontrado'}")
logging.info(f"   üí≥ PIX_KEY: {'‚úÖ Configurado' if PIX_KEY else '‚ùå N√£o encontrado'}")

# Configurar credenciais do Google de forma mais flex√≠vel
if GOOGLE_APPLICATION_CREDENTIALS:
    basedir = os.path.abspath(os.path.dirname(__file__))
    if not os.path.isabs(GOOGLE_APPLICATION_CREDENTIALS):
        google_creds_path = os.path.join(basedir, GOOGLE_APPLICATION_CREDENTIALS)
    else:
        google_creds_path = GOOGLE_APPLICATION_CREDENTIALS
    
    if os.path.exists(google_creds_path):
        os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = google_creds_path
        logging.info(f"‚úÖ Google Application Credentials configurado: {google_creds_path}")
    else:
        logging.warning(f"‚ö†Ô∏è Arquivo de credenciais n√£o encontrado: {google_creds_path}")
        logging.info("‚ö†Ô∏è Funcionalidades do Google Vision podem n√£o funcionar")
else:
    logging.info("‚ÑπÔ∏è GOOGLE_APPLICATION_CREDENTIALS n√£o configurado - funcionalidades OCR limitadas")